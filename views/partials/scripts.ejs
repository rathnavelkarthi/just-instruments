<script>
    // Wait for DOM to be fully loaded
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize Lucide icons
        lucide.createIcons();
        
        console.log('Dashboard JavaScript loaded successfully');
        
        // Initialize all functionality
        initializeSidebar();
        initializeNavigation();
        initializeModals();
        initializeForms();
        initializeCharts();
    });

    // Sidebar functionality
    function initializeSidebar() {
        const sidebar = document.getElementById('sidebar');
        const overlay = document.getElementById('sidebarOverlay');
        
        if (!sidebar || !overlay) {
            console.error('Sidebar elements not found');
            return;
        }
        
        // Toggle sidebar function
        window.toggleSidebar = function() {
            sidebar.classList.toggle('-translate-x-full');
            overlay.classList.toggle('hidden');
        };

        // Close sidebar when clicking overlay
        overlay.addEventListener('click', function() {
            toggleSidebar();
        });
        
        console.log('Sidebar initialized');
    }

    // Section navigation
    function initializeNavigation() {
        window.showSection = function(sectionId) {
            console.log('Switching to section:', sectionId);
            
            // Hide all sections
            document.querySelectorAll('.section').forEach(section => {
                section.classList.add('hidden');
            });
            
            // Show selected section
            const targetSection = document.getElementById(sectionId + 'Section');
            if (targetSection) {
                targetSection.classList.remove('hidden');
                console.log('Section shown:', sectionId);
            } else {
                console.error('Section not found:', sectionId + 'Section');
            }
            
            // Update sidebar active state
            document.querySelectorAll('nav a').forEach(link => {
                link.classList.remove('bg-blue-50', 'text-gray-700');
                link.classList.add('text-gray-600');
            });
            
            const activeLink = document.querySelector(`a[href="#${sectionId}"]`);
            if (activeLink) {
                activeLink.classList.add('bg-blue-50', 'text-gray-700');
                activeLink.classList.remove('text-gray-600');
            }
        };
    }

    // Modal functions
    function initializeModals() {
        window.showModal = function(modalId) {
            console.log('Opening modal:', modalId);
            const modal = document.getElementById(modalId);
            if (modal) {
                modal.classList.remove('hidden');
                modal.classList.add('flex');
            } else {
                console.error('Modal not found:', modalId);
            }
        };

        window.closeModal = function(modalId) {
            console.log('Closing modal:', modalId);
            const modal = document.getElementById(modalId);
            if (modal) {
                modal.classList.add('hidden');
                modal.classList.remove('flex');
                
                // Reset form
                const form = modal.querySelector('form');
                if (form) {
                    form.reset();
                }
            } else {
                console.error('Modal not found:', modalId);
            }
        };
        
        console.log('Modals initialized');
    }

    // Form initialization
    function initializeForms() {
        // Add Customer Form
        const addCustomerForm = document.getElementById('addCustomerForm');
        if (addCustomerForm) {
            addCustomerForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                console.log('Customer form submitted!');
                
                // Get form data
                const formData = new FormData(e.target);
                const customerData = {
                    company_name: formData.get('company_name'),
                    contact_person: formData.get('contact_person'),
                    email: formData.get('email'),
                    phone: formData.get('phone'),
                    address: formData.get('address')
                };
                
                console.log('Customer data:', customerData);
                
                try {
                    const response = await fetch('/api/customers', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            method: 'POST',
                            data: customerData
                        })
                    });
                    
                    const result = await response.json();
                    
                    if (result.success) {
                        console.log('Customer saved to Supabase:', result.data);
                        alert('Customer added successfully!');
                        closeModal('addCustomerModal');
                        location.reload();
                    } else {
                        console.error('Failed to save customer:', result.error);
                        alert('Failed to save customer: ' + result.error);
                    }
                } catch (error) {
                    console.error('Error saving customer:', error);
                    alert('Error saving customer: ' + error.message);
                }
            });
            console.log('Customer form initialized');
        }

        // Add Instrument Form
        const addInstrumentForm = document.getElementById('addInstrumentForm');
        if (addInstrumentForm) {
            addInstrumentForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                console.log('Instrument form submitted!');
                
                // Get form data
                const formData = new FormData(e.target);
                const instrumentData = {
                    instrument_name: formData.get('instrument_name'),
                    model: formData.get('model'),
                    serial_number: formData.get('serial_number'),
                    manufacturer: formData.get('manufacturer'),
                    customer_id: formData.get('customer_id'),
                    specifications: formData.get('specifications')
                };
                
                console.log('Instrument data:', instrumentData);
                
                try {
                    const response = await fetch('/api/instruments', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            method: 'POST',
                            data: instrumentData
                        })
                    });
                    
                    const result = await response.json();
                    
                    if (result.success) {
                        console.log('Instrument saved to Supabase:', result.data);
                        alert('Instrument added successfully!');
                        closeModal('addInstrumentModal');
                        location.reload();
                    } else {
                        console.error('Failed to save instrument:', result.error);
                        alert('Failed to save instrument: ' + result.error);
                    }
                } catch (error) {
                    console.error('Error saving instrument:', error);
                    alert('Error saving instrument: ' + error.message);
                }
            });
            console.log('Instrument form initialized');
        }
    }

    // Refresh data from Supabase
    window.refreshData = function() {
        console.log('Refreshing data from Supabase...');
        location.reload();
    }


    // Initialize charts
    function initializeCharts() {
        // Calibration Trends Chart
        const calibrationChart = document.getElementById('calibrationChart');
        if (calibrationChart) {
            const ctx = calibrationChart.getContext('2d');
            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],
                    datasets: [{
                        label: 'Calibrations',
                        data: [12, 19, 3, 5, 2, 3],
                        borderColor: 'rgb(59, 130, 246)',
                        backgroundColor: 'rgba(59, 130, 246, 0.1)',
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
            console.log('Calibration chart initialized');
        }

        // Certificate Status Chart
        const certificateChart = document.getElementById('certificateChart');
        if (certificateChart) {
            const ctx2 = certificateChart.getContext('2d');
            new Chart(ctx2, {
                type: 'doughnut',
                data: {
                    labels: ['Valid', 'Expired', 'Pending'],
                    datasets: [{
                        data: [45, 12, 8],
                        backgroundColor: [
                            'rgb(34, 197, 94)',
                            'rgb(239, 68, 68)',
                            'rgb(245, 158, 11)'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });
            console.log('Certificate chart initialized');
        }
    }

    // Action functions
    window.showCustomerDetails = function(customerName) {
        alert('Customer details for: ' + customerName);
    };

    window.editCustomer = function(customerName) {
        alert('Edit customer: ' + customerName);
    };

    window.deleteCustomer = function(customerName) {
        if (confirm('Are you sure you want to delete ' + customerName + '?')) {
            alert('Customer deleted: ' + customerName);
        }
    };

    window.showInstrumentDetails = function(instrumentName) {
        alert('Instrument details for: ' + instrumentName);
    };

    window.editInstrument = function(instrumentName) {
        alert('Edit instrument: ' + instrumentName);
    };

    window.deleteInstrument = function(instrumentName) {
        if (confirm('Are you sure you want to delete ' + instrumentName + '?')) {
            alert('Instrument deleted: ' + instrumentName);
        }
    };
</script>
